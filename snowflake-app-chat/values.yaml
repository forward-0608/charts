# Default values for snowflake-app-chat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

namespace: ticket


image:
  repository: public.ecr.aws/o3v4d8e4/dev/snowflake-app-chat
  imagePullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 7dbf186


ports:
- name: chat
  containerPort: 8086
  protocol: TCP
- name: ws
  containerPort: 28902
  protocol: TCP

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  ports: 
  - name: chat
    port: 8086
    protocol: TCP
  - name: ws
    port: 28902
    protocol: TCP
    
ingress:
  enabled: false
  className: alb
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"  
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
    # memory: "1280Mi"
    # cpu:  "500m"
  # limits:
    # memory: "1280Mi"
    # cpu: "500m" 

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

strategy:
  type: RollingUpdate

sideCar:
  enabled: false
  image: 
    repository: grafana/promtail
    tag: latest
  imagePullPolicy: Always
  resources:
    enabled: true
    requests:
      cpu: 50m
      memory: 200Mi
  volumeMounts:
  - name: config
    mountPath: /etc/promtail/promtail.yaml
    subPath: promtail.yaml

env: {}

mainContainer: {}
  # volumeMounts:
  # - name: varlog
  #   mountPath: /data/www/project/logs
  # - name: logs
  #   mountPath: /datatmp

volumes: []
# - name: varlog
#   emptyDir: {}
# - name: logs
#   hostPath:
#     path: /tmp
# - name: config
  # configMap:
    # name: promtail-config-cm

livenessProbe:
  enabled: false
  httpGet:
    path: /monitor/heartbeat
    port: 8086

startupProbe:
  enabled: false
  httpGet:
    path: /monitor/heartbeat
    port: 8086
  failureThreshold: 5
  periodSeconds: 10
  initialDelaySeconds: 70

readinessProbe:
  enabled: false
  httpGet:
    path: /monitor/heartbeat
    port: 8086


nodeSelector: {}

tolerations: {}
# tolerations: 
# - key: pubsubnet
#   operator: Equal
#   value: "true"
#   effect: "NoSchedule"

# affinity: {}
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: business
          operator: In
          values: 
          - lottery  
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #     podAffinityTerm:
  #       labelSelector:
  #         matchExpressions:
  #         - key: xxx
  #           operator: In
  #           value: xxx
  #     weight: 20
    
